name: Prepare bundles
on:
  push
env:
  BUNDLES_DIR: bundles
  BUNDLES_BLOB: bundles
  BRANCH_BUNDLES_BLOB: branchbundles
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v1

      - name: Maven modules cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build bundlegen
        run: mvn --batch-mode clean package

      - name: Prepare temp directory
        run: echo "TEMP_DIR=$(mktemp -d)" >> $GITHUB_ENV

      - name: Export git branch name
        run: |
          echo "BRANCH_NAME=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Determine blob container name
        run: |
          if [ "${BRANCH_NAME}" = "master" ]; then
            echo "BLOB_NAME=${BUNDLES_BLOB}" >> $GITHUB_ENV
          else
            echo "BLOB_NAME=${BRANCH_BUNDLES_BLOB}" >> $GITHUB_ENV
          fi

      - name: Execute bundlegen
        run: |
          main_class="com.citrix.microapps.bundlegen.BundlegenMain"

          if [ "${BRANCH_NAME}" = "master" ]; then
            link_bundles="${{secrets.AZURE_STORAGE_URL}}/${BLOB_NAME}/"
            target_directory="${TEMP_DIR}"
          else
            link_bundles="${{secrets.AZURE_STORAGE_URL}}/${BLOB_NAME}/${BRANCH_NAME}/"
            target_directory="${TEMP_DIR}/${BRANCH_NAME}"
          fi
          args="${BUNDLES_DIR} ${target_directory}/ ${link_bundles}"

          mvn --batch-mode exec:java -pl bundlegen -Dexec.mainClass="${main_class}" -Dexec.args="${args}"

      # dependency for uploading into Azure storage
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # Use latest version of the 3.1 channel

      - name: Upload bundles to Azure storage
        uses: lauchacarro/Azure-Storage-Action@master
        with:
          folder: ${{ env.TEMP_DIR }}
          connection-string: ${{ secrets.CONNECTION_STRING }}
          public-access-policy: BlobContainer
          blob-container-name: ${{ env.BLOB_NAME }}
